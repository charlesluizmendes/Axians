@page "/Avisos"
@using Axians.Web.Data

<PageTitle>Avisos</PageTitle>

<div class="row">
    <div class="col-md-12">
        <Header />
    </div>
</div>

<div class="row">
    <div class="col-md-3 g-5">
        <div class="list-option">
            @foreach (var option in Options)
            {
                <OptionItem Option="option" IsSelected="option == selectedOption" OnOptionSelected="HandleOptionSelected" />
            }
        </div>
    </div>

    <div class="col-md-9 g-5">
        <div class="row">
            <div class="col-md-12">
                @if (selectedOption is not null)
                {
                    <OptionHeader CurrentOption="selectedOption!" IsFirstOption="IsFirstOption" IsLastOption="IsLastOption" OnPrevious="GoToPrevious" OnNext="GoToNext" />
                    <TaxSelector Taxes="selectedOption.Taxs" SelectedTaxId="@selectedTaxId" OnTaxSelected="HandleTaxSelection" />
                }
            </div>
        </div>
    </div>
</div>

@code {
    private Option selectedOption;
    private string selectedTaxId;

    public int CurrentIndex { get; set; } = 0;

    private bool IsFirstOption => CurrentIndex == 0;
    private bool IsLastOption => CurrentIndex == Options.Count - 1;

    private async Task HandleOptionSelected(Option option)
    {
        selectedOption = option;
        CurrentIndex = Options.IndexOf(option);
        selectedTaxId = "";
        StateHasChanged(); 
        await Task.CompletedTask;
    }

    private void GoToPrevious()
    {
        if (!IsFirstOption)
        {
            CurrentIndex--;
            SetSelectedOptionByIndex(CurrentIndex);
        }
    }

    private void GoToNext()
    {
        if (!IsLastOption)
        {
            CurrentIndex++;
            SetSelectedOptionByIndex(CurrentIndex);
        }
    }

    private void SetSelectedOptionByIndex(int index)
    {
        selectedOption = Options.ElementAtOrDefault(index);
        selectedTaxId = "";
        StateHasChanged();  
    }

    private void HandleTaxSelection(string taxId)
    {
        selectedTaxId = taxId;
    }

    public List<Option> Options { get; set; } = new List<Option>
    {
        new() { Id = 0, Name = "Opção 1", Check = true, Taxs = new List<Tax> { new() { Id = 1, Type = "Variável" }, new() { Id = 2, Type = "Fixa" } } },
        new() { Id = 1, Name = "Opção 2", Check = true, Taxs = new List<Tax> { new() { Id = 2, Type = "Planejada" }, new() { Id = 2, Type = "Flutuante" } } },
    };
}
